# -*- coding: utf-8 -*-
"""kaggle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wLR3EGV30o4HYiskVgCEZN9C1F48Lq12
"""

import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
import numpy as np

(X_train, y_train), (X_test,y_test) = tf.keras.datasets.cifar10.load_data()

X_train.shape

"""Data Visualization"""

def plot_sample(index):
    plt.figure(figsize = (20,2))
    plt.imshow(X_train[index])

plot_sample(6)

classes = ["airplane","automobile","bird","cat","deer","dog","frog","horse","ship","truck"]

classes[y_train[6][0]]

len(X_test)

"""Preprocessing: Scale images"""

X_train_scaled = X_train / 255
X_test_scaled = X_test / 255

y_train[0:5]

y_train_categorical = keras.utils.to_categorical(
    y_train, num_classes=10, dtype='float32'
)
y_test_categorical = keras.utils.to_categorical(
    y_test, num_classes=10, dtype='float32'
)

y_train_categorical[0:5]

X_train.shape

"""Model building and training"""

model = keras.Sequential([
      keras.layers.Flatten(input_shape = (32,32,3)),
      keras.layers.Dense(3000,activation = 'relu'),
      keras.layers.Dense(1000,activation = 'relu'),
      keras.layers.Dense(10,activation = 'sigmoid')
])

model.compile(
    optimizer = 'SGD',
    loss =  'categorical_crossentropy',
    metrics = ['accuracy']
)

model.fit(X_train_scaled,y_train_categorical,epochs = 50)

"""Let's make some predictions"""

index = 875
def plot_sample(index):
    plt.figure(figsize = (20,2))
    plt.imshow(X_test[index])
plot_sample(index)
classes[np.argmax(model.predict(X_test_scaled)[index])]